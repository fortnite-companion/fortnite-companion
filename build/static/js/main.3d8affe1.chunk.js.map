{"version":3,"sources":["components/weapons/weaponcard/weaponcard.js","components/header/header.js","components/loading/loading.js","components/weapons/weapons.js","components/status/status.js","components/footer/footer.js","App.js","serviceWorker.js","components/frontpage/frontpage.js","components/store/timer/timer.js","components/profile/platformButton/platformButton.js","components/tiny-loading/tinyloading.js","components/profile/compareusers/compareusers.js","components/profile/profile.js","components/store/itemcard/itemcard.js","components/store/store.js","index.js"],"names":["WeaponCard","state","console","log","this","props","weapon","react_default","a","createElement","className","rarity","weaponName","src","weaponImage","Component","Header","react_router_dom","to","Loading","Weapons","weapons","weaponToShow","isLoading","getWeapons","_callee","response","data","json","activeWeapons","wep","regenerator_default","wrap","_context","prev","next","fetch","catch","ok","Error","statusText","sent","text","JSON","parse","_this","setState","push","stop","Fragment","header_header","loading","map","weaponcard","name","images","image","Status","serverStatus","getServerStatus","status","message","Footer","components_status_status","Boolean","window","location","hostname","match","Frontpage","username","recentlyTracked","handleSubmit","event","length","getUserId","url","uid","then","addToRecent","history","handleChangeUsername","target","value","handleKeypress","key","handleClickRecent","_callee2","newName","_context2","currentTarget","dataset","id","recent","includes","shift","localStorage","setItem","stringify","clearRecent","loadRecent","getItem","_this2","required","type","placeholder","onChange","onKeyDown","onClick","data-id","footer_footer","Timer","seconds","time","startTimer","tick","setInterval","countdown","secondsDecremented","secondsToTime","secs","divisor_for_minutes","divisor_for_seconds","h","Math","floor","m","s","ceil","PlatformButton","convertedDevice","setDevice","device","platform","handleClick","TinyLoading","CompareUsers","compareToUserName","currentUserStats","COLORS","RADIAN","PI","getStats","compareToUserStats","setChartData","handleUsernameChange","currentuserData","compareToUserData","newData","kills","epicName","overallData","defaultModes","wins","placetop1","renderCustomizedLabel","_ref3","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","concat","toFixed","calculateKDR","matchesplayed","calculateWLR","wlr","currentUser","tiny_loading_tinyloading","es6","width","height","labelLine","label","dataKey","entry","class","Profile","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stats","calculatedStats","kdr","user_id","profileFetched","updateTimerSeconds","currentDevice","devices","fetchparams","async","params","uname","userid","asyncToGenerator","mark","getDevices","setInitalCurrentDevice","newDevices","firstDevice","setCurrentDevice","newDevice","platformButton_platformButton","defaultsolo","default","defaultduo","defaultsquad","compareusers_compareusers","style","margin","paddingBottom","ItemCard","item","background","cost","vbucks","Store","store","itemsArray","featuredItems","isVisible","secondsUntilMidnight","midnight","Date","setHours","setMinutes","setSeconds","setMilliseconds","now","getTimezoneOffset","setTime","getTime","getCurrentStore","createItemArray","items","newItemsArray","newFeaturedItems","featured","itemcard_itemcard","itemid","timer_timer","routing","react_router","exact","path","component","Weapon","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d8affe1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./weaponscard.css\";\r\n\r\nclass WeaponCard extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.weapon);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.rarity + \" weapon-card\"}>\r\n        <h1 className=\"weapon-name\">{this.props.weaponName}</h1>\r\n        <img className=\"weapon-image\" src={this.props.weaponImage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeaponCard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport \"./header-small.css\";\r\nclass Header extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <div>\r\n          <Link to=\"/\" className=\"link-text\">\r\n            Home\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/store\" className=\"link-text\">\r\n            Daily Store\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/weapons\" className=\"link-text locked\">\r\n            Weapons (Coming Soon!)\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/challenges\" className=\"link-text locked\">\r\n            Challenges (Coming Soon!)\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nclass Loading extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"loading\">\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n          <div className=\"obj\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport \"./weapons.css\";\r\nimport WeaponCard from \"./weaponcard/weaponcard\";\r\nimport Header from \"../header/header\";\r\nimport Loading from \"../loading/loading\";\r\n\r\nclass Weapons extends Component {\r\n  state = {\r\n    weapons: \"\",\r\n    weaponToShow: [],\r\n    isLoading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWeapons();\r\n  }\r\n\r\n  getWeapons = async () => {\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/weapons/get\";\r\n\r\n    let response = await fetch(url).catch(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      this.setState({ weapons: json });\r\n\r\n      let activeWeapons = [];\r\n      let weapons = json[\"weapons\"];\r\n      for (let wep in weapons) {\r\n        activeWeapons.push(weapons[wep]);\r\n      }\r\n      console.log(activeWeapons);\r\n      this.setState({ weaponToShow: activeWeapons });\r\n\r\n      if (json != null) {\r\n        this.setState({ isLoading: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <React.Fragment>\r\n          <Header />\r\n          <Loading />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <div className=\"content content-weapons-wrapper\">\r\n          <div className=\"content-weapons\">\r\n            <div className=\"weapon-box\">\r\n              <h1 className=\"title title-weapon\">Weapons</h1>\r\n              <div className=\"line line-weapon\" />\r\n              <div className=\"weapons\">\r\n                {this.state.weaponToShow.map(wep => (\r\n                  <WeaponCard\r\n                    weaponName={wep.name}\r\n                    weaponImage={wep.images.image}\r\n                    rarity={wep.rarity}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weapons;\r\n","import React, { Component } from \"react\";\r\nimport \"./status.css\";\r\n\r\nclass Status extends Component {\r\n  state = {\r\n    serverStatus: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getServerStatus();\r\n  }\r\n\r\n  getServerStatus = async () => {\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/status/fortnite_server_status\";\r\n\r\n    let response = await fetch(url).catch(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      this.setState({ serverStatus: json });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.serverStatus.status === \"UP\") {\r\n      return (\r\n        <div className=\"serverContent\">\r\n          <p className=\"serverText\">\r\n            <span className=\"serverUp\" />\r\n            {this.state.serverStatus.message}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"serverContent\">\r\n          <p className=\"serverText\">\r\n            <span className=\"serverDown\" />\r\n            Fortnite is down..\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Status;\r\n","import React, { Component } from \"react\";\r\nimport Status from \"../status/status\";\r\nimport \"./footer.css\";\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div>\r\n          <Status />\r\n        </div>\r\n        <div>\r\n          <p className=\"disclaimer footer-text\">\r\n            This service is not associated with Epic Games and is developed\r\n            without their granted permisson\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p className=\"footer-text credit\">\r\n            Devloped by magnusrambech & thomasrognes\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","/**\r\n *\r\n *\r\n * PLAYGROUND CODE FOR TEST, NO LONGER BEING USED\r\n *\r\n *\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Footer from \"./components/footer/footer\";\r\nimport { Redirect } from \"react-router\";\r\nclass App extends Component {\r\n  state = {\r\n    stats: [],\r\n    username: \"\",\r\n    user_id: \"\",\r\n    loading: false,\r\n    profileFetched: false\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  getUserId = async () => {\r\n    this.setState({ loading: true, profileFetched: false });\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/users/id?username=\" +\r\n      this.state.username;\r\n\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      this.setState({ user_id: json.uid });\r\n      this.getStats();\r\n    }\r\n  };\r\n  getUserIdNew = async () => {\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/users/id?username=\" +\r\n      this.state.username;\r\n\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      let uid = json.uid;\r\n      let username = this.state.username;\r\n      if (uid != null) {\r\n        this.props.history.push(\"profile/\" + username + \"/\" + uid);\r\n      }\r\n    }\r\n  };\r\n  getStats = async () => {\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/users/public/br_stats_v2?user_id=\" +\r\n      this.state.user_id;\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      this.setState({ stats: json });\r\n      this.setState({ loading: false });\r\n      if (json.epicName != null) {\r\n        this.setState({ profileFetched: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChangeUsername = event => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleSubmit = event => {\r\n    if (this.state.username.length > 0) {\r\n      this.getUserId();\r\n    }\r\n  };\r\n  handleSubmitNew = event => {\r\n    if (this.state.username.length > 0) {\r\n      this.getUserIdNew();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let content = (\r\n      <React.Fragment>\r\n        <h1 className=\"title-main\">Fortnite Companion</h1>\r\n        <div className=\"line\" />\r\n        <input\r\n          required={true}\r\n          type=\"text\"\r\n          placeholder=\"Enter your Epic account\"\r\n          onChange={this.handleChangeUsername}\r\n        />\r\n        <button onClick={this.handleSubmit}>Track</button>\r\n        <button onClick={this.handleSubmitNew}>track new</button>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"content\">\r\n          <div className=\"loading\">\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n            <div className=\"obj\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.state.profileFetched) {\r\n      return (\r\n        <div className=\"content\">\r\n          <h1 className=\"title\">\r\n            Overall data for\r\n            <span className=\"username\"> {this.state.username}</span>\r\n          </h1>\r\n          <div className=\"line\" />\r\n          <div className=\"card\">\r\n            <div className=\"stat-container\">\r\n              <span className=\"label\">\r\n                Kills\r\n                <p className=\"stat\">\r\n                  {this.state.stats.overallData.defaultModes.kills}\r\n                </p>\r\n              </span>\r\n\r\n              <span className=\"label\">\r\n                Wins\r\n                <p className=\"stat\">\r\n                  {this.state.stats.overallData.defaultModes.placetop1}\r\n                </p>\r\n              </span>\r\n\r\n              <span className=\"label\">\r\n                Matches\r\n                <p className=\"stat\">\r\n                  {this.state.stats.overallData.defaultModes.matchesplayed}\r\n                </p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <a href=\"/\">back</a>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div className=\"content\">{content}</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Footer from \"../footer/footer\";\r\nimport \"./frontpage.css\";\r\nimport \"./frontpage-small.css\";\r\nimport Header from \"../header/header\";\r\nclass Frontpage extends Component {\r\n  state = { username: \"\", recentlyTracked: [] };\r\n\r\n  componentDidMount() {\r\n    this.loadRecent();\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    if (this.state.username.length != \"\") {\r\n      this.getUserId();\r\n    }\r\n  };\r\n\r\n  getUserId = async () => {\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/users/id?username=\" +\r\n      this.state.username;\r\n\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      let uid = json.uid;\r\n      let username = this.state.username;\r\n      if (uid != null) {\r\n        this.addToRecent(username);\r\n        this.props.history.push(\"profile/\" + username + \"/\" + uid);\r\n      }\r\n    }\r\n  };\r\n  handleChangeUsername = event => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleKeypress = event => {\r\n    if (event.key == \"Enter\") {\r\n      this.handleSubmit();\r\n    }\r\n  };\r\n  handleClickRecent = async event => {\r\n    let newName = event.currentTarget.dataset.id;\r\n    await this.setState({ username: newName });\r\n    this.handleSubmit();\r\n  };\r\n  addToRecent = username => {\r\n    let recent = this.state.recentlyTracked;\r\n    if (!recent.includes(username)) {\r\n      if (recent.length >= 5) {\r\n        recent.shift();\r\n      }\r\n      recent.push(username);\r\n      localStorage.setItem(\"recentlyTracked\", JSON.stringify(recent));\r\n    }\r\n  };\r\n  clearRecent = () => {\r\n    let recent = [];\r\n    localStorage.setItem(\"recentlyTracked\", JSON.stringify(recent));\r\n    this.setState({ recentlyTracked: recent });\r\n  };\r\n  loadRecent = () => {\r\n    let recent = localStorage.getItem(\"recentlyTracked\");\r\n    if (recent != null) {\r\n      this.setState({ recentlyTracked: JSON.parse(recent) });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <div className=\"content\">\r\n          <div className=\"content-frontpage\">\r\n            <h1 className=\"title-main\">Fortnite Companion</h1>\r\n            <div className=\"line\" />\r\n            <input\r\n              className=\"fp-input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Enter your Epic account\"\r\n              onChange={this.handleChangeUsername}\r\n              onKeyDown={this.handleKeypress}\r\n            />\r\n            <div className=\"recent-container\">\r\n              {this.state.recentlyTracked.map(username => (\r\n                <span\r\n                  className=\"recent\"\r\n                  onClick={this.handleClickRecent}\r\n                  data-id={username}\r\n                >\r\n                  {username + \" \\t\"}\r\n                </span>\r\n              ))}\r\n            </div>\r\n            <button onClick={this.handleSubmit}>Track</button>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Frontpage;\r\n","import React, { Component } from \"react\";\r\nimport \"./timer.css\";\r\nclass Timer extends Component {\r\n  state = { seconds: 0, time: {} };\r\n  componentDidMount() {\r\n    this.startTimer();\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds\r\n    };\r\n    return obj;\r\n  }\r\n  startTimer = () => {\r\n    this.setState({ seconds: this.props.seconds });\r\n    this.tick();\r\n  };\r\n\r\n  tick = () => {\r\n    setInterval(this.countdown, 1000);\r\n  };\r\n  countdown = () => {\r\n    let secondsDecremented = this.state.seconds - 1;\r\n    this.setState({\r\n      seconds: secondsDecremented,\r\n      time: this.secondsToTime(secondsDecremented)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.time.h != null) {\r\n      if (this.state.time.h === 0) {\r\n        return (\r\n          <span className=\"timer\">\r\n            {this.props.text}\r\n            {\" \" + this.state.time.m + \"m \" + this.state.time.s + \"s\"}\r\n          </span>\r\n        );\r\n      }\r\n      return (\r\n        <span className=\"timer\">\r\n          {this.props.text}\r\n          {\" \" +\r\n            this.state.time.h +\r\n            \"h \" +\r\n            this.state.time.m +\r\n            \"m \" +\r\n            this.state.time.s +\r\n            \"s\"}\r\n        </span>\r\n      );\r\n    }\r\n    return <span className=\"timer\">Getting time..</span>;\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\nimport \"./platformButton.css\";\r\nclass PlatformButton extends Component {\r\n  state = { convertedDevice: \"Unknown\" };\r\n\r\n  componentDidMount() {\r\n    this.setDevice();\r\n  }\r\n  setDevice = () => {\r\n    let device = this.props.platform;\r\n\r\n    if (device === \"keyboardmouse\") {\r\n      this.setState({ convertedDevice: \"PC\" });\r\n    } else if (device === \"touch\") {\r\n      this.setState({ convertedDevice: \"Mobile\" });\r\n    } else if (device === \"gamepad\") {\r\n      this.setState({ convertedDevice: \"Console\" });\r\n    } else {\r\n      this.setState({ convertedDevice: \"Unkown\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className={\" device\"} onClick={this.props.handleClick}>\r\n          {this.state.convertedDevice}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlatformButton;\r\n","import React, { Component } from \"react\";\r\nimport \"./tinyloading.css\";\r\nclass TinyLoading extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"tiny-loading\">\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n        <div className=\"tiny-obj\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TinyLoading;\r\n","import React, { Component } from \"react\";\r\nimport \"./compareusers.css\";\r\nimport \"./compareusers-small.css\";\r\nimport Loading from \"../../loading/loading\";\r\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\r\nimport TinyLoading from \"../../tiny-loading/tinyloading\";\r\n\r\nclass CompareUsers extends Component {\r\n  state = {\r\n    loading: false,\r\n    compareToUserName: \"\",\r\n    currentUserStats: {},\r\n    COLORS: [\"#ffeaa7\", \"#ecf0f1\"],\r\n    RADIAN: Math.PI / 180,\r\n    data: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.compareToUserData) {\r\n      this.setState({ currentUserStats: this.props.currentUser });\r\n    }\r\n    this.setState({ currentUserStats: this.props.currentUser });\r\n  }\r\n\r\n  getUserId = async () => {\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/users/id?username=\" +\r\n      this.state.compareToUserName;\r\n\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      let uid = json.uid;\r\n      if (uid != null) {\r\n        this.getStats(uid);\r\n      }\r\n    }\r\n  };\r\n\r\n  getStats = async uid => {\r\n    this.setState({ loading: true });\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/users/public/br_stats_v2?user_id=\" +\r\n      uid;\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n\r\n      this.setState({ compareToUserStats: json });\r\n      this.setChartData();\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  handleUsernameChange = event => {\r\n    this.setState({ compareToUserName: event.target.value });\r\n  };\r\n  handleKeypress = event => {\r\n    if (event.key == \"Enter\") {\r\n      this.handleSubmit();\r\n    }\r\n  };\r\n  handleSubmit = () => {\r\n    this.getUserId();\r\n  };\r\n\r\n  setChartData = () => {\r\n    let currentuserData = this.state.currentUserStats;\r\n    let compareToUserData = this.state.compareToUserStats;\r\n    let newData = {\r\n      kills: [\r\n        {\r\n          name: compareToUserData.epicName,\r\n          value: compareToUserData.overallData.defaultModes.kills\r\n        },\r\n        {\r\n          name: currentuserData.epicName,\r\n          value: currentuserData.overallData.defaultModes.kills\r\n        }\r\n      ],\r\n      wins: [\r\n        {\r\n          name: compareToUserData.epicName,\r\n          value: compareToUserData.overallData.defaultModes.placetop1\r\n        },\r\n        {\r\n          name: currentuserData.epicName,\r\n          value: currentuserData.overallData.defaultModes.placetop1\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.setState({ data: newData });\r\n  };\r\n\r\n  renderCustomizedLabel = ({\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    percent,\r\n    index\r\n  }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * this.state.RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * this.state.RADIAN);\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        fill=\"white\"\r\n        textAnchor={x > cx ? \"start\" : \"end\"}\r\n        dominantBaseline=\"central\"\r\n      >\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  calculateKDR = (kills, matchesplayed, wins) => {\r\n    let kdr = kills / (matchesplayed - wins);\r\n    return kdr.toFixed(2);\r\n  };\r\n  calculateWLR = (matchesplayed, wins) => {\r\n    let wlr = (wins / matchesplayed) * 100;\r\n    console.log(matchesplayed, wins);\r\n    return wlr.toFixed(1) + \"%\";\r\n  };\r\n  render() {\r\n    let currentuserData = this.state.currentUserStats;\r\n    let compareToUserData = this.state.compareToUserStats;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"compare-box\">\r\n          <h1 className=\"category\">Compare</h1>\r\n          <div className=\"line-red\" />\r\n          <TinyLoading />\r\n        </div>\r\n      );\r\n    } else if (this.state.data.kills) {\r\n      return (\r\n        <div className=\"compare-box\">\r\n          <h1 className=\"category\">Compare</h1>\r\n          <div className=\"line-red\" />\r\n          {currentuserData && (\r\n            <div className=\"chart-box\">\r\n              <div className=\"username-vs-username\">\r\n                <h3 className=\"currentuser inline\">\r\n                  {currentuserData.epicName}\r\n                </h3>\r\n                <h3 className=\" vs inline\"> vs </h3>\r\n                <h3 className=\"comparetouser inline\">\r\n                  {compareToUserData.epicName}\r\n                </h3>\r\n              </div>\r\n              <div className=\"charts-container\">\r\n                <div className=\"charts-wrapper\">\r\n                  <div className=\"chart\">\r\n                    <h3 className=\"label\">Kills</h3>\r\n                    <PieChart width={200} height={200}>\r\n                      <Pie\r\n                        data={this.state.data.kills}\r\n                        cx={100}\r\n                        cy={100}\r\n                        labelLine={false}\r\n                        label={this.renderCustomizedLabel}\r\n                        outerRadius={80}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                      >\r\n                        {this.state.data.kills.map((entry, index) => (\r\n                          <Cell\r\n                            key={`cell-${index}`}\r\n                            fill={\r\n                              this.state.COLORS[\r\n                                index % this.state.COLORS.length\r\n                              ]\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </Pie>\r\n                    </PieChart>\r\n                    <div className=\"username-vs-username\">\r\n                      <h3 className=\"currentuser inline\">\r\n                        {\r\n                          this.state.currentUserStats.overallData.defaultModes\r\n                            .kills\r\n                        }\r\n                      </h3>\r\n                      <h3 className=\"inline vs\"> vs </h3>\r\n                      <h3 className=\"comparetouser inline\">\r\n                        {\r\n                          this.state.compareToUserStats.overallData.defaultModes\r\n                            .kills\r\n                        }\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"chart\">\r\n                    <h3 className=\"label\">Wins</h3>\r\n                    <PieChart width={200} height={200}>\r\n                      <Pie\r\n                        data={this.state.data.wins}\r\n                        cx={100}\r\n                        cy={100}\r\n                        labelLine={false}\r\n                        label={this.renderCustomizedLabel}\r\n                        outerRadius={80}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                      >\r\n                        {this.state.data.wins.map((entry, index) => (\r\n                          <Cell\r\n                            key={`cell-${index}`}\r\n                            fill={\r\n                              this.state.COLORS[\r\n                                index % this.state.COLORS.length\r\n                              ]\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </Pie>\r\n                    </PieChart>\r\n                    <div className=\"username-vs-username\">\r\n                      <h3 className=\"currentuser inline\">\r\n                        {\r\n                          this.state.currentUserStats.overallData.defaultModes\r\n                            .placetop1\r\n                        }\r\n                      </h3>\r\n                      <h3 className=\"inline vs\"> vs </h3>\r\n                      <h3 className=\"comparetouser inline\">\r\n                        {\r\n                          this.state.compareToUserStats.overallData.defaultModes\r\n                            .placetop1\r\n                        }\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"line-red\" />\r\n\r\n                <div className=\"charts-data\">\r\n                  <div>\r\n                    <h3 className=\"label\">K/D</h3>\r\n                    <div>\r\n                      <h3 className=\"currentuser inline\">\r\n                        {this.calculateKDR(\r\n                          currentuserData.overallData.defaultModes.kills,\r\n                          currentuserData.overallData.defaultModes\r\n                            .matchesplayed,\r\n                          currentuserData.overallData.defaultModes.placetop1\r\n                        )}\r\n                      </h3>\r\n                      <h3 className=\" vs inline\"> vs </h3>\r\n                      <h3 className=\"comparetouser inline\">\r\n                        {this.calculateKDR(\r\n                          compareToUserData.overallData.defaultModes.kills,\r\n                          compareToUserData.overallData.defaultModes\r\n                            .matchesplayed,\r\n                          compareToUserData.overallData.defaultModes.placetop1\r\n                        )}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"label\">Win %</h3>\r\n                    <div>\r\n                      <h3 className=\"currentuser inline\">\r\n                        {this.calculateWLR(\r\n                          currentuserData.overallData.defaultModes\r\n                            .matchesplayed,\r\n                          currentuserData.overallData.defaultModes.placetop1\r\n                        )}\r\n                      </h3>\r\n                      <h3 className=\" vs inline\"> vs </h3>\r\n                      <h3 className=\"comparetouser inline\">\r\n                        {this.calculateWLR(\r\n                          compareToUserData.overallData.defaultModes\r\n                            .matchesplayed,\r\n                          compareToUserData.overallData.defaultModes.placetop1\r\n                        )}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"label\">Matches</h3>\r\n                    <div>\r\n                      <h3 className=\"currentuser inline\">\r\n                        {currentuserData.overallData.defaultModes.matchesplayed}\r\n                      </h3>\r\n                      <h3 className=\" vs inline\"> vs </h3>\r\n                      <h3 className=\"comparetouser inline\">\r\n                        {\r\n                          compareToUserData.overallData.defaultModes\r\n                            .matchesplayed\r\n                        }\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"compare-box\">\r\n        <h1 className=\"category\">Compare</h1>\r\n        <div className=\"line-red\" />\r\n        <div>\r\n          <h3 className=\"compareTo\">\r\n            Compare {currentuserData.epicName} to:\r\n            <input\r\n              className=\"compare-input\"\r\n              placeholder=\"Epic username\"\r\n              onChange={this.handleUsernameChange}\r\n              onKeyDown={this.handleKeypress}\r\n            />\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompareUsers;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\nimport \"./profile-small.css\";\r\nimport Header from \"../header/header\";\r\nimport Footer from \"../footer/footer\";\r\nimport Loading from \"../loading/loading\";\r\nimport Timer from \"../store/timer/timer\";\r\nimport PlatformButton from \"./platformButton/platformButton\";\r\nimport CompareUsers from \"./compareusers/compareusers\";\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    stats: {},\r\n    calculatedStats: {\r\n      kdr: 0.0,\r\n      wlr: 0.0\r\n    },\r\n    username: \"\",\r\n    user_id: \"\",\r\n    loading: false,\r\n    profileFetched: false,\r\n    updateTimerSeconds: 120,\r\n    currentDevice: \"\",\r\n    devices: []\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStats();\r\n    this.setState({ currentDevice: this.setInitalCurrentDevice() });\r\n    /* setInterval(this.getStats, this.state.updateTimerSeconds * 1000); AUTO UPDATE TIMER */\r\n  }\r\n  componentWillUnmount() {}\r\n\r\n  fetchparams = async => {\r\n    let params = this.props.match.params;\r\n    let uname = params.username;\r\n    let uid = params.userid;\r\n    this.setState({ username: uname, user_id: uid });\r\n  };\r\n  getStats = async () => {\r\n    this.setState({ loading: true });\r\n    await this.fetchparams();\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/users/public/br_stats_v2?user_id=\" +\r\n      this.state.user_id;\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n\r\n    if (response) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      this.setState({ stats: json });\r\n      this.setState({ loading: false });\r\n      if (json.epicName != null) {\r\n        this.setState({\r\n          profileFetched: true,\r\n          devices: this.getDevices(),\r\n          currentDevice: this.setInitalCurrentDevice()\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  getDevices = () => {\r\n    let devices = this.state.stats.devices;\r\n    let newDevices = [];\r\n    for (let device in devices) {\r\n      newDevices.push(devices[device]);\r\n    }\r\n    return newDevices;\r\n  };\r\n\r\n  setInitalCurrentDevice = () => {\r\n    let firstDevice = this.getDevices()[0];\r\n    let devices = this.state.stats.data;\r\n    for (let device in devices) {\r\n      if (device === firstDevice) {\r\n        return devices[device];\r\n      }\r\n    }\r\n  };\r\n  setCurrentDevice = newDevice => {\r\n    let devices = this.state.stats.data;\r\n    for (let device in devices) {\r\n      if (device === newDevice) {\r\n        this.setState({ currentDevice: devices[device] });\r\n      }\r\n    }\r\n  };\r\n\r\n  calculateKDR = (kills, matchesplayed, wins) => {\r\n    let kdr = kills / (matchesplayed - wins);\r\n    return kdr.toFixed(2);\r\n  };\r\n  calculateWLR = (matchesplayed, wins) => {\r\n    let wlr = (wins / matchesplayed) * 100;\r\n    return wlr.toFixed(1) + \"%\";\r\n  };\r\n\r\n  render() {\r\n    let overallData = this.state.stats.overallData;\r\n    let currentDevice = this.state.currentDevice;\r\n    if (this.state.loading) {\r\n      return (\r\n        <React.Fragment>\r\n          <Header />\r\n          <Loading />\r\n          <Footer />\r\n        </React.Fragment>\r\n      );\r\n    } else if (this.state.profileFetched) {\r\n      return (\r\n        <React.Fragment>\r\n          <Header />\r\n          <div className=\"content content-profile-wrapper\">\r\n            <div className=\"content-profile\">\r\n              {/* <Timer\r\n                text={\"Updating in \"}\r\n                seconds={this.state.updateTimerSeconds}\r\n              /> */}\r\n              <div className=\"top\">\r\n                <h1 className=\"username\">{this.state.username}</h1>\r\n                <div className=\"line-red\" />\r\n\r\n                <div className=\"statbox overall-box\">\r\n                  <div className=\"card\">\r\n                    <h1 className=\"overall category\">Overall Stats</h1>\r\n                    <div className=\"line-small-red overall-line\" />\r\n                    <div className=\"stat-container\">\r\n                      <span className=\"label\">\r\n                        Kills\r\n                        <p className=\"stat\">{overallData.defaultModes.kills}</p>\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        K/D\r\n                        <p className=\"stat\">\r\n                          {this.calculateKDR(\r\n                            overallData.defaultModes.kills,\r\n                            overallData.defaultModes.matchesplayed,\r\n                            overallData.defaultModes.placetop1\r\n                          )}\r\n                        </p>\r\n                      </span>\r\n\r\n                      <span className=\"label\">\r\n                        Wins\r\n                        <p className=\"stat\">\r\n                          {overallData.defaultModes.placetop1}\r\n                        </p>\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        Win %\r\n                        <p className=\"stat\">\r\n                          {this.calculateWLR(\r\n                            overallData.defaultModes.matchesplayed,\r\n                            overallData.defaultModes.placetop1\r\n                          )}\r\n                        </p>\r\n                      </span>\r\n\r\n                      <span className=\"label\">\r\n                        Matches\r\n                        <p className=\"stat\">\r\n                          {overallData.defaultModes.matchesplayed}\r\n                        </p>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sides-container\">\r\n                <div className=\"leftSide\">\r\n                  <h1 className=\"category\">Modes</h1>\r\n                  <div className=\"line-red\" />\r\n                  <div className=\"statbox platform-box\">\r\n                    <div className=\"platform-selector\">\r\n                      {this.state.devices.map(device => (\r\n                        <PlatformButton\r\n                          key={device}\r\n                          platform={device}\r\n                          handleClick={() => this.setCurrentDevice(device)}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    {currentDevice && currentDevice.defaultsolo && (\r\n                      <React.Fragment>\r\n                        <div className=\"card\">\r\n                          <h1 className=\"stat stat-header\">Solo</h1>\r\n                          <div className=\"line-small-red\" />\r\n                          <div className=\"stat-container\">\r\n                            <h1 className=\"label\">\r\n                              Kills\r\n                              <p className=\"stat\">\r\n                                {currentDevice.defaultsolo.default.kills}\r\n                              </p>\r\n                            </h1>\r\n                            <span className=\"label\">\r\n                              K/D\r\n                              <p className=\"stat\">\r\n                                {this.calculateKDR(\r\n                                  currentDevice.defaultsolo.default.kills,\r\n                                  currentDevice.defaultsolo.default\r\n                                    .matchesplayed,\r\n                                  currentDevice.defaultsolo.default.placetop1\r\n                                )}\r\n                              </p>\r\n                            </span>\r\n\r\n                            <span className=\"label\">\r\n                              Wins\r\n                              <p className=\"stat\">\r\n                                {currentDevice.defaultsolo.default.placetop1}\r\n                              </p>\r\n                            </span>\r\n                            <span className=\"label\">\r\n                              Win %\r\n                              <p className=\"stat\">\r\n                                {this.calculateWLR(\r\n                                  currentDevice.defaultsolo.default\r\n                                    .matchesplayed,\r\n                                  currentDevice.defaultsolo.default.placetop1\r\n                                )}\r\n                              </p>\r\n                            </span>\r\n\r\n                            <span className=\"label\">\r\n                              Matches\r\n                              <p className=\"stat\">\r\n                                {\r\n                                  currentDevice.defaultsolo.default\r\n                                    .matchesplayed\r\n                                }\r\n                              </p>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    )}\r\n                    {currentDevice && currentDevice.defaultduo && (\r\n                      <React.Fragment>\r\n                        <div className=\"card\">\r\n                          <h1 className=\"stat stat-header\">Duo</h1>\r\n                          <div className=\"line-small-red\" />\r\n                          <div className=\"stat-container\">\r\n                            <h1 className=\"label\">\r\n                              Kills\r\n                              <p className=\"stat\">\r\n                                {currentDevice.defaultduo.default.kills}\r\n                              </p>\r\n                            </h1>\r\n                            <span className=\"label\">\r\n                              K/D\r\n                              <p className=\"stat\">\r\n                                {this.calculateKDR(\r\n                                  currentDevice.defaultduo.default.kills,\r\n                                  currentDevice.defaultduo.default\r\n                                    .matchesplayed,\r\n                                  currentDevice.defaultduo.default.placetop1\r\n                                )}\r\n                              </p>\r\n                            </span>\r\n\r\n                            <span className=\"label\">\r\n                              Wins\r\n                              <p className=\"stat\">\r\n                                {currentDevice.defaultduo.default.placetop1}\r\n                              </p>\r\n                            </span>\r\n                            <span className=\"label\">\r\n                              Win %\r\n                              <p className=\"stat\">\r\n                                {this.calculateWLR(\r\n                                  currentDevice.defaultduo.default\r\n                                    .matchesplayed,\r\n                                  currentDevice.defaultduo.default.placetop1\r\n                                )}\r\n                              </p>\r\n                            </span>\r\n\r\n                            <span className=\"label\">\r\n                              Matches\r\n                              <p className=\"stat\">\r\n                                {currentDevice.defaultduo.default.matchesplayed}\r\n                              </p>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    )}\r\n                    {currentDevice && currentDevice.defaultsquad && (\r\n                      <React.Fragment>\r\n                        <div className=\"card\">\r\n                          <h1 className=\"stat stat-header\">Squad</h1>\r\n                          <div className=\"line-small-red\" />\r\n                          <div className=\"stat-container\">\r\n                            <h1 className=\"label\">\r\n                              Kills\r\n                              <p className=\"stat\">\r\n                                {currentDevice.defaultsquad.default.kills}\r\n                              </p>\r\n                            </h1>\r\n                            <span className=\"label\">\r\n                              K/D\r\n                              <p className=\"stat\">\r\n                                {this.calculateKDR(\r\n                                  currentDevice.defaultsquad.default.kills,\r\n                                  currentDevice.defaultsquad.default\r\n                                    .matchesplayed,\r\n                                  currentDevice.defaultsquad.default.placetop1\r\n                                )}\r\n                              </p>\r\n                            </span>\r\n\r\n                            <span className=\"label\">\r\n                              Wins\r\n                              <p className=\"stat\">\r\n                                {currentDevice.defaultsquad.default.placetop1}\r\n                              </p>\r\n                            </span>\r\n                            <span className=\"label\">\r\n                              Win %\r\n                              <p className=\"stat\">\r\n                                {this.calculateWLR(\r\n                                  currentDevice.defaultsquad.default\r\n                                    .matchesplayed,\r\n                                  currentDevice.defaultsquad.default.placetop1\r\n                                )}\r\n                              </p>\r\n                            </span>\r\n\r\n                            <span className=\"label\">\r\n                              Matches\r\n                              <p className=\"stat\">\r\n                                {\r\n                                  currentDevice.defaultsquad.default\r\n                                    .matchesplayed\r\n                                }\r\n                              </p>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"rightSide\">\r\n                  <CompareUsers currentUser={this.state.stats} />\r\n                </div>\r\n              </div>\r\n              <Link style={{ margin: 0, paddingBottom: 10 + \"px\" }} to=\"/\">\r\n                back\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"content\">\r\n          <h1>{this.state.username}</h1>\r\n          <Link style={{ margin: 0, paddingBottom: 10 + \"px\" }} to=\"/\">\r\n            back\r\n          </Link>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"../../loading/loading\";\r\nimport \"./itemcard.css\";\r\nimport \"./itemcard-small.css\";\r\nclass ItemCard extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    if (this.state.item != null) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div className=\"item-card\">\r\n        <img\r\n          className=\"store-image\"\r\n          src={this.props.item.item.images.background}\r\n        />\r\n        <h1 className=\"item-name item\">{this.props.item.item.name}</h1>\r\n        {/*  <p className=\"item-desc item\">{this.props.item.item.description}</p> */}\r\n        <p className=\"item-price item\">\r\n          {this.props.item.cost}\r\n\r\n          <img className=\"vbucks-item-card\" src={this.props.vbucks} />\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemCard;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../header/header\";\r\nimport Loading from \"../loading/loading\";\r\nimport { tsNumberKeyword } from \"@babel/types\";\r\nimport ItemCard from \"./itemcard/itemcard\";\r\nimport \"./store.css\";\r\nimport \"./store-small.css\";\r\nimport Timer from \"./timer/timer\";\r\nclass Store extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    store: \"\",\r\n    itemsArray: [],\r\n    featuredItems: [],\r\n    isVisible: \"hidden\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentStore();\r\n  }\r\n  secondsUntilMidnight = () => {\r\n    var midnight = new Date();\r\n    midnight.setHours(24);\r\n    midnight.setMinutes(0);\r\n    midnight.setSeconds(0);\r\n    midnight.setMilliseconds(0);\r\n\r\n    //Convert to UTC time to match up with store update at 02:00, not 00:00\r\n    var now = new Date();\r\n    console.log(now.getTimezoneOffset());\r\n    now.setTime(now.getTime() + now.getTimezoneOffset() * 60 * 1000);\r\n\r\n    return (midnight.getTime() - now.getTime()) / 1000;\r\n  };\r\n\r\n  getCurrentStore = async () => {\r\n    let url =\r\n      \"https://fortnite-public-api.theapinetwork.com/prod09/store/get?language=en\";\r\n    let response = await fetch(url).then(function(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    });\r\n    if (response) {\r\n      const data = await response.text();\r\n      let json = JSON.parse(data);\r\n      this.setState({ store: json });\r\n      if (json != null) {\r\n        this.createItemArray();\r\n        this.setState({ store: json, isLoading: false, isVisible: \"visible\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  createItemArray = () => {\r\n    let items = this.state.store.items;\r\n    let newItemsArray = [];\r\n    let newFeaturedItems = [];\r\n    for (let item in items) {\r\n      if (items[item].featured === 1) {\r\n        newFeaturedItems.push(items[item]);\r\n      } else {\r\n        newItemsArray.push(items[item]);\r\n      }\r\n    }\r\n    this.setState({\r\n      itemsArray: newItemsArray,\r\n      featuredItems: newFeaturedItems\r\n    });\r\n  };\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <React.Fragment>\r\n          <Header />\r\n          <Loading />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <div className=\"content content-store-wrapper\">\r\n          <div className={\"content-store \" + this.state.isVisible}>\r\n            <div className=\"store-box featured-box\">\r\n              <div className=\"store-category\">\r\n                <h1 className=\"title title-store\">Featured</h1>\r\n                <span className=\"timer\">Exclusive deals</span>\r\n                <div className=\"line line-store\" />\r\n              </div>\r\n              <div className=\"item-list\">\r\n                {this.state.featuredItems.map(item => (\r\n                  <ItemCard\r\n                    vbucks={this.state.store.vbucks}\r\n                    key={item.itemid}\r\n                    item={item}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"store-box daily-box\">\r\n              <div className=\"store-category\">\r\n                <h1 className=\"title title-store\">Daily Store</h1>\r\n                <Timer\r\n                  text={\"New deals in \"}\r\n                  seconds={this.secondsUntilMidnight()}\r\n                />{\" \"}\r\n                <div className=\"line line-store\" />\r\n              </div>\r\n              <div className=\"item-list\">\r\n                {this.state.itemsArray.map(item => (\r\n                  <ItemCard\r\n                    vbucks={this.state.store.vbucks}\r\n                    key={item.itemid}\r\n                    item={item}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Weapon from \"./components/weapons/weapons\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Frontpage from \"./components/frontpage/frontpage\";\r\nimport Profile from \"./components/profile/profile\";\r\nimport { BrowserRouter, HashRouter, Route } from \"react-router-dom\";\r\nimport Store from \"./components/store/store\";\r\n\r\nconst routing = (\r\n  <HashRouter>\r\n    <div style={{ width: 100 + \"%\", height: 100 + \"%\" }}>\r\n      <Route exact path=\"/\" component={Frontpage} />\r\n      <Route path=\"/weapons\" component={Weapon} />\r\n      <Route path=\"/profile/:username/:userid\" component={Profile} />\r\n      <Route path=\"/store\" component={Store} />\r\n    </div>\r\n  </HashRouter>\r\n);\r\n\r\nReactDOM.render(routing, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}